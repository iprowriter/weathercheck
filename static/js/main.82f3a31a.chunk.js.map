{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","seasonOutput","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","className","Spinner","message","defaultProps","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","renderContent","React","Component","ReactDOM","render","document","querySelector"],"mappings":"sMAGMA,G,MAAe,CACjBC,OAAQ,CACJC,aAAc,+BACdC,SAAU,OAEdC,OAAQ,CACJF,aAAc,+BACdC,SAAU,eA0BHE,EAZO,SAACC,GACnB,IAXeC,EAAKC,EAWdC,GAXSF,EAWUD,EAAMC,KAXXC,GAWgB,IAAIE,MAAOC,YAVnC,GAAKH,EAAQ,EACdD,EAAM,EAAI,SAAU,SAEpBA,EAAM,EAAI,SAAW,UAMH,EAEIP,EAAaS,GAAvCP,EAFsB,EAEtBA,aAAcC,EAFQ,EAERA,SACrB,OACI,yBAAKS,UAAS,yBAAoBH,IAC9B,uBAAGG,UAAS,4BAAuBT,EAAvB,WACZ,gCAAMD,EAAN,MACA,uBAAGU,UAAS,6BAAwBT,EAAxB,aC7BlBU,EAAU,SAACP,GACb,OACF,yBAAKM,UAAU,6BACb,yBAAKA,UAAU,kBAAkBN,EAAMQ,WAK3CD,EAAQE,aAAe,CACrBD,QAAS,cAGID,QCATG,E,2MAEFC,MAAQ,CAAEV,IAAK,KAAMW,aAAc,I,mFAEd,IAAD,OAChBC,OAAOC,UAAUC,YAAYC,oBACzB,SAACC,GAAD,OAAc,EAAKC,SAAS,CAAEjB,IAAKgB,EAASE,OAAOC,cACnD,SAACC,GAAD,OAAS,EAAKH,SAAS,CAACN,aAAcS,EAAIb,e,sCAI9C,OAAIc,KAAKX,MAAMC,eAAiBU,KAAKX,MAAMV,IAChC,uCAAaqB,KAAKX,MAAMC,eAE1BU,KAAKX,MAAMC,cAAgBU,KAAKX,MAAMV,IACnC,kBAAC,EAAD,CAAeA,IAAKqB,KAAKX,MAAMV,MAEhC,kBAAC,EAAD,CAASO,QAAQ,qC,+BAM7B,OACI,yBAAKF,UAAU,cACVgB,KAAKC,qB,GAzBHC,IAAMC,WAiCxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.82f3a31a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SeasonDisplay.css';\r\n\r\nconst seasonConfig = {\r\n    summer: {\r\n        seasonOutput: \"It is summer and I have abs!\",\r\n        iconName: \"sun\"\r\n    },\r\n    winter: {\r\n        seasonOutput: \" Damn, winter is almost over\",\r\n        iconName: \"snowflake\"\r\n    }\r\n}\r\n\r\nconst getSeason = (lat, month) => {\r\n    if (month > 2 && month < 9) {\r\n        return lat > 0 ? 'summer': 'winter';\r\n    } else {\r\n        return lat > 0 ? 'winter' : 'summer';\r\n    }\r\n\r\n}\r\n\r\n\r\nconst SeasonDisplay = (props) => {\r\n    const season = getSeason(props.lat, new Date().getMonth()); \r\n    const {seasonOutput, iconName} = seasonConfig[season];\r\n    return (\r\n        <div className={`season-display ${season}`}> \r\n            <i className={`icon-left massive ${iconName} icon`} />\r\n            <h1> {seasonOutput}  </h1>\r\n            <i className={`icon-right massive ${iconName} icon`} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SeasonDisplay;","import React from 'react';\r\n\r\nconst Spinner = (props) => {\r\n    return (\r\n  <div className=\"ui active inverted dimmer\">\r\n    <div className=\"ui text loader\">{props.message}</div>\r\n  </div>\r\n    )\r\n};\r\n\r\nSpinner.defaultProps = {\r\n  message: 'Loading...'\r\n};\r\n\r\nexport default Spinner;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner';\n// const App = () => {\n//     window.navigator.geolocation.getCurrentPosition(\n//         (position) => console.log(position),\n//         (err) => console.log(err)\n//     );\n//     return (\n//         <div>Hi there!</div>\n//     );\n// };\n\nclass App extends React.Component {\n    \n    state = { lat: null, errorMessage: '' };\n\n    componentDidMount() {\n        window.navigator.geolocation.getCurrentPosition(\n            (position) => this.setState({ lat: position.coords.latitude}),\n            (err) => this.setState({errorMessage: err.message})\n        );\n    }\n    renderContent() {\n        if (this.state.errorMessage && !this.state.lat) {\n            return <div>Error: {this.state.errorMessage}</div>;\n            }\n            if (!this.state.errorMessage && this.state.lat) {\n            return  <SeasonDisplay lat={this.state.lat} />\n            }\n            return <Spinner message=\"Please accept location request\"/>\n\n    }\n\n    // React says we have to define render!! above with constructor function\n    render() {\n       return (\n           <div className=\"border red\">\n               {this.renderContent()}\n           </div>\n       )\n    };\n};\n    \n    \n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}